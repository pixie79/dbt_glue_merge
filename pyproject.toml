[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.autopep8]
max_line_length = 160
#ignore = "E501,W6"  # or ["E501", "W6"]
in-place = true
recursive = true
aggressive = 3

[tool.black]
line-length = 160

[tool.poetry]
name = "demo"
version = "0.1.0"
description = "DBT Data Project"
authors = ["Mark Olliver"]

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
logzero = "^1.7.0"
click = "^8.0.3"
boto3 = "^1.19.12"
pandas = "^1.3.5"
SQLAlchemy = "^1.4.31"
DateTime = "^4.3"
pathlib = "^1.0.1"
aws-glue-sessions = "^0.35"
sqlfluff-templater-dbt = "^1.3.1"
avro-schema = "^0.3.3"
avro = "^1.11.1"
dbt-glue = "^0.3.4"
dbt-osmosis = "^0.9.6"
toolz = "^0.12.0"
pandas-profiling = "^3.4.0"
dbt-redshift = "^1.3.0"
streamlit = "^1.13.0"
prefect-dbt = "^0.2.4"
greenlet = "^2.0.0"
prefect-aws = "^0.1.7"

[tool.poetry.dev-dependencies]
mock = "^4.0.3"
pytest = "^5.2"
freezegun = "^1.1.0"
coverage = {extras = ["toml"], version = "^6.2"}
pre-commit = "^2.16.0"
black = "^21.12b0"
autopep8 = "^1.6.0"
isort = "^5.10.1"
pylint = "^2.12.2"
pytest-mock = "^3.6.1"
datatest = "^0.11.1"

[tool.sqlfluff.core]
templater = "dbt"
verbose = 1
#exclude_rules = L022,L027
dialect = "sparksql"

[tool.sqlfluff.rules]
max_line_length = 100

[tool.sqlfluff.rules.L030]  # Function names
capitalisation_policy = "upper"

[tool.sqlfluff.templater.dbt]
project_dir = "./dbt-project"
profiles_dir = "."
profile = "dbtbase"
target = "raw"

[tool.sqlfluff.templater.jinja]
apply_dbt_builtins = "True"

[tool.sqlfluff.templater.jinja.macros]
# Macros provided as builtins for dbt projects
dbt_ref = "{% macro ref(model_ref) %}{{model_ref}}{% endmacro %}"
dbt_source = "{% macro source(source_name, table) %}{{source_name}}_{{table}}{% endmacro %}"
dbt_config = "{% macro config() %}{% for k in kwargs %}{% endfor %}{% endmacro %}"
dbt_var = "{% macro var(variable, default='') %}item{% endmacro %}"
dbt_is_incremental = "{% macro is_incremental() %}True{% endmacro %}"

[tool.sqlfluff.templater.dbt.context]
my_variable = 1
